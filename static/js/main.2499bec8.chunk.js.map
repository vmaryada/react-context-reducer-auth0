{"version":3,"sources":["Auth/Auth.js","Store/Store.js","Components/Meetup.js","Components/Users.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Auth","signOut","auth0","logout","returnTo","client_id","process","this","WebAuth","domain","audience","clientID","redirectUri","responseType","scope","handleAuthentication","bind","signIn","authorize","profile","Promise","resolve","reject","parseHash","err","authResult","idToken","idTokenPayload","expiresAt","exp","MeetupContext","React","createContext","UserContext","UserAction","auth","UserLogin","InitialState","meetup","title","date","Date","attendees","users","authenticated","reducer","state","action","type","console","log","payload","filter","attendee","Store","props","useReducer","state_meetup","dispatch","state_users","login_dispatch","Provider","value","handleLogin","children","Meetup","Consumer","context","length","style","textAlign","map","index","key","paddingBottom","minWidth","display","className","onClick","Users","useState","setAuthenticated","user_name","setUserName","then","getProfile","name","catch","error","user","dispatch_1","App","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2499bec8.chunk.js","sourcesContent":["import auth0 from 'auth0-js';\n\nexport default class Auth {\n\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: process.env.REACT_APP_AUTH0_DOMAIN,\n      audience: `https://${process.env.REACT_APP_AUTH0_DOMAIN}/userinfo`,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      redirectUri: 'https://vmaryada.github.io/react-context-reducer-auth0/?callback',\n      responseType: 'id_token',\n      scope: 'openid profile'\n    });\n\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.signIn = this.signIn.bind(this);\n  }\n\n  signIn() {\n    this.auth0.authorize();\n  }\n\n  getProfile() {\n    return this.profile;\n  }\n\n  signOut = () =>\n  {\nthis.auth0.logout({\n    returnTo: 'http://localhost:3000',\n    client_id: process.env.REACT_APP_AUTH0_CLIENT_ID\n})\n  }\n\n  handleAuthentication() {\n    return new Promise((resolve, reject) => {\n      this.auth0.parseHash((err, authResult) => {\n        if (err) return reject(err);\n        if (!authResult || !authResult.idToken) {\n          return reject(err);\n        }\n\n        this.idToken = authResult.idToken;\n        this.profile = authResult.idTokenPayload;\n        // set the time that the id token will expire at\n        this.expiresAt = authResult.idTokenPayload.exp * 1000;\n        resolve();\n      });\n    });\n  }\n}","import React, { useReducer } from 'react';\n//import { tsPropertySignature } from '@babel/types';\nimport Auth from '../Auth/Auth.js'\n\nconst MeetupContext = React.createContext();\nconst UserContext = React.createContext();\nconst UserAction = React.createContext();\nconst auth = new Auth();\nconst UserLogin = React.createContext();\n\nconst InitialState = {\n    meetup: {\n        title: 'Auth0 Meetup',\n        date: Date(),\n        attendees: ['vin', 'surya', 'soujan']\n    },\n    users: ['klr', 'vk18', 'rpant'], \n    authenticated: false\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'SUBSCRIBE': console.log(action.payload); return { ...state, attendees: [...state.attendees, action.payload] };\n        case 'UNSUBSCRIBE': return { ...state, attendees: state.attendees.filter(attendee => attendee !== action.payload) };\n        default: return state;\n    }\n}\n\nfunction Store(props) {\n    const login_reducer = (state, action) => {\n        switch (action.type) {\n            case 'LOGIN': console.log('action called');\n                auth.signIn();\n                console.log('signin called');\n                state.authenticated = true; \n                //state = { name: [...state.name]}\n                return state;\n            case 'LOGOUT': auth.signOut();\n                console.log('sign Out called');\n               // state = { name: [...state.name] }\n                return state;\n            case 'SUBSCRIBE':\n                console.log('Subscribe called');\n                state = { ...state,  users:[...state.users,action.payload] };\n                return state;\n            case 'ADD_USER':\n                console.log('add_user case called');\n                state = { ...state,  users:[...state.users,action.payload] };\n                console.log(state);\n                return state;\n            default: console.log('defaulted'); return state;\n        }\n\n    }\n\n\n    const [state_meetup, dispatch] = useReducer(reducer, InitialState.meetup);\n    const [state_users, login_dispatch] = useReducer(login_reducer, InitialState);\n  \n\n\n    //const [state_users, dispatch_users] = useReducer(reducer, InitialState.users);  \n    return (\n        <UserAction.Provider value={dispatch}>\n            <UserContext.Provider value={{...state_users, handleLogin : auth.signIn}}>\n                <UserLogin.Provider value={login_dispatch}>\n                    <MeetupContext.Provider value={state_meetup}>\n                        {props.children}\n                    </MeetupContext.Provider>\n                </UserLogin.Provider>\n            </UserContext.Provider>\n        </UserAction.Provider>\n    )\n}\nexport { MeetupContext };\nexport { UserContext };\nexport { UserAction };\nexport { UserLogin };\nexport default Store;","import React from 'react';\nimport { MeetupContext } from '../Store/Store.js';\nimport { UserAction } from '../Store/Store.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction Meetup() {\n\n    return (\n        <UserAction.Consumer>\n            {dispatch =>\n                <MeetupContext.Consumer>\n                    {context =>\n\n                        <div>\n\n\n                            <h4>Attendess({context.attendees.length})</h4>\n                            <hr />\n                            <ul style={{ textAlign: 'left' }}>\n                                {context.attendees.map((attendee, index) =>\n                                    <span key={index}>\n                                        <li style={{ paddingBottom: '10px' }}><span style={{minWidth:'100px', display:'inline-block'}}>{attendee} &nbsp; &nbsp;</span>\n      <button className='btn btn-primary btn-sm' onClick={() => dispatch({ type: 'UNSUBSCRIBE', payload: context.attendees[index] })}>Unsubscribe</button>\n                                        </li>\n                                    </span>)}\n                            </ul>\n                        </div>\n                    }\n                </MeetupContext.Consumer>\n            }\n        </UserAction.Consumer>\n    )\n}\n\nexport default Meetup;","import React, { useState } from 'react';\nimport { UserContext, UserAction, UserLogin } from '../Store/Store.js'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Auth from '../Auth/Auth.js'\nfunction Users() {\n    const auth = new Auth();\n\n    const [authenticated, setAuthenticated] = useState(false);\n    const [user_name, setUserName] = useState('');\n    /*useEffect(()=>\n    {\n       \n    auth.handleAuthentication().then(()=>{\n      setAuthenticated(true);\n    })\n    })*/\n\n   \n    auth.handleAuthentication().then(() => {\n        console.log('handle auth called');\n       setUserName( auth.getProfile().name);\n        console.log(user_name);\n        setAuthenticated(true);\n       \n    }).catch(error => console.log(error));\n\n    return (\n        <div>\n            <UserContext.Consumer>\n                {context =>\n                    <div>\n                        <UserAction.Consumer>\n                            {dispatch =>\n                                <div>\n                                    {console.log(context)}\n                                     \n                                    <h4>Users({context.users.length})</h4>\n                                    <hr />\n                                    <ul style={{ textAlign: 'left' }}>\n                                        {\n                                            context.users.map((user, index) =>\n                                            <span key={index}>\n                                                <li style={{ paddingBottom: '10px' }}><span style={{ minWidth: '100px', display: 'inline-block' }}>{user} &nbsp; &nbsp;</span>\n                                                    <button className=\"btn btn-primary btn-sm\" onClick={() => dispatch({ type: 'SUBSCRIBE', payload: context.users[index] })}> Subscribe </button>\n                                                </li>\n                                            </span>\n                                        )}\n                                    </ul>\n                                </div>\n                            }\n                        </UserAction.Consumer>\n\n                        <UserLogin.Consumer>\n                            {dispatch_1 =>\n\n                                <div>\n                                    {authenticated ? <div><button className=\"btn btn-primary\" onClick={() => dispatch_1({ type: 'LOGOUT' })}>LogOut</button>\n                                        <span>&nbsp; &nbsp; </span>\n                                        {console.log(user_name)}\n                                        <button className=\"btn btn-primary\" onClick={() => dispatch_1({ type: 'SUBSCRIBE', payload: user_name })}>Add user to Users</button></div> : <button className=\"btn btn-primary\" onClick={context.handleLogin}>Login</button> }\n                                    \n                                    \n                                    {/*<div><button className=\"btn btn-primary\" onClick={()=>dispatch({type:'LOGIN'})}>LogIn</button>\n<span>&nbsp; &nbsp; </span>\n   <button className=\"btn btn-primary\" onClick={()=>dispatch({type:'SUBSCRIBE'})}>Add user to Users</button></div> */}\n                                    {console.log(authenticated)}\n                                </div>\n                            }\n                        </UserLogin.Consumer>\n\n                    </div>\n                }\n            </UserContext.Consumer>\n            <br /><br />\n        </div>\n    )\n}\n\nexport default Users;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Store from './Store/Store.js';\nimport Meetup from './Components/Meetup.js';\nimport Users from './Components/Users.js';\n//import Auth from './Auth/Auth.js';\nfunction App() {\n\n  //const auth = new Auth();\n  return (\n    <Store>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Meetup/>\n        <Users/>\n      </header>\n    </div>\n    </Store>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}